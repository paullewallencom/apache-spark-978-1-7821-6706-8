from __future__ import print_function# $example on$from pyspark.ml.classification import LogisticRegression# $example off$from pyspark.sql import SparkSessionif __name__ == "__main__":    spark = SparkSession\        .builder\        .appName("LogisticRegressionWithElasticNet")\        .getOrCreate()    # $example on$    # Load training data    training = spark.read.format("libsvm").load("data/mllib/sample_libsvm_data.txt")    lr = LogisticRegression(maxIter=10, regParam=0.3, elasticNetParam=0.8)    # Fit the model    lrModel = lr.fit(training)    # Print the coefficients and intercept for logistic regression    print("Coefficients: " + str(lrModel.coefficients))    print("Intercept: " + str(lrModel.intercept))    # $example off$    spark.stop()